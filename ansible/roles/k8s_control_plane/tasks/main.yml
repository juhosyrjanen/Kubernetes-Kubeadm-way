---
- name: Initialize the first control plane node
  command: kubeadm init --upload-certs --control-plane-endpoint "{{ kubernetes_lb_ip }}:6443" --pod-network-cidr=10.244.0.0/16
  run_once: true
  register: kubeadm_init_output

- name: Extract certificate key
  set_fact:
    certificate_key: "{{ kubeadm_init_output.stdout | regex_search('(?<=--certificate-key )[a-zA-Z0-9]+') }}"
  run_once: true
  when: "'Using certificate key:' in kubeadm_init_output.stdout"

- name: Make admin.conf readable
  file:
    path: /etc/kubernetes/admin.conf
    mode: 0644
  when: inventory_hostname == target_controller

- name: Fetch kubeconfig file
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ playbook_dir }}/admin.conf"
    flat: yes
  when: inventory_hostname == target_controller

- name: Set up healthcheck 
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/sites-available/kubernetes.default.svc.cluster.local

- name: Enable healthcheck 
  file:
    src: /etc/nginx/sites-available/kubernetes.default.svc.cluster.local
    dest: /etc/nginx/sites-enabled/kubernetes.default.svc.cluster.local
    state: link

- name: Restart nginx
  service:
    name: nginx
    state: restarted

- name: Wait for healthcheck to return 200
  shell: curl --cacert /etc/kubernetes/pki/ca.crt https://{{ kubernetes_lb_ip }}:6443/version
  register: healthcheck
  until: not healthcheck.failed
  retries: 30
  delay: 5 
  when: inventory_hostname == target_controller

- name: Create the kubeadm join command
  shell: kubeadm token create --print-join-command
  run_once: true
  register: kubeadm_join_command_output
  when: inventory_hostname == target_controller

- name: Set kubeadm_join_command fact
  set_fact:
    kubeadm_join_command: "{{ kubeadm_join_command_output.stdout }} --control-plane --certificate-key {{ certificate_key }} --v=5"  
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"
  when: inventory_hostname == target_controller

- name: Debug kubeadm_join_command
  debug:
    var: kubeadm_join_command

- name: Initialize the other control plane nodes
  command: "sudo {{ kubeadm_join_command }}"
  when: inventory_hostname != target_controller

- name: Set up healthcheck on other controllers
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/sites-available/kubernetes.default.svc.cluster.local
  when: inventory_hostname != target_controller

- name: Restart nginx
  service:
    name: nginx
    state: restarted
