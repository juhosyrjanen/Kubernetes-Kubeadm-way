---
- name: Initialize the first control plane node
  command: sudo kubeadm init --control-plane-endpoint "{{ kubernetes_lb_ip}}:6443" --upload-certs --apiserver-advertise-address "{{ hostvars['controller1']['ansible_host'] }}"  
  run_once: true
  register: kubeadm_init_output

- name: Extract certificate key
  set_fact:
    certificate_key: "{{ kubeadm_init_output.stdout | regex_search('(?<=--certificate-key )[a-zA-Z0-9]+') }}"
  run_once: true
  when: "'Using certificate key:' in kubeadm_init_output.stdout"

- name: Make admin.conf readable
  file:
    path: /etc/kubernetes/admin.conf
    mode: 0644
  when: inventory_hostname == target_controller

- name: Fetch kubeconfig file
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ playbook_dir }}/admin.conf"
    flat: yes
  when: inventory_hostname == target_controller

- name: Create the kubeadm join command
  shell: kubeadm token create --print-join-command
  run_once: true
  register: kubeadm_join_command_output
  when: inventory_hostname == target_controller

- name: Set kubeadm_join_command fact
  set_fact:
    kubeadm_join_command: "{{ kubeadm_join_command_output.stdout }} --control-plane --certificate-key {{ certificate_key }} --v=5"  
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"
  when: inventory_hostname == target_controller

- name: Debug kubeadm_join_command
  debug:
    msg: "{{ kubeadm_join_command }}"
  when: inventory_hostname == target_controller

- name: Join controller2
  command: "sudo {{ kubeadm_join_command }} --apiserver-advertise-address {{ hostvars['controller2']['ansible_host'] }}"
  when: inventory_hostname == 'controller2'

- name: Join controller3
  command: "sudo {{ kubeadm_join_command }} --apiserver-advertise-address {{ hostvars['controller3']['ansible_host'] }}"
  when: inventory_hostname == 'controller3'
